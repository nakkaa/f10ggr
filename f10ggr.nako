// [ソフト名] F10貼り付けずにググる
// [Version] 1.12
// [配布元URL] http://7ka.org
// [作成者] なっかあ
// [説明] F10キーを押すとクリップボードにコピーされているテキストをググります。
//        ホットキー、検索エンジンは設定で変更できます。
// Copyright (C) 2015 としつーる

// [ソースコードの実行方法]
// 日本語プログラム言語「なでしこ」が必要です。
// http://nadesi.com でダウンロードしてください。

//変数
hotKeyValue=『F10』。
ExithotKeyValue=『Shift+F10』。
browserValue=0。

//定数
Version=(『1.12』)。//バージョン番号
WebSiteUrl=(『http://7ka.org/software/f10ggr/』)。
ミューキーワード=(『F10貼り付けずにググる』)。//このキーワードが被ったら多重起動となる

//ブラウザのpath
!AppPathIE=(『Internet Explorer』&改行&『HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\App Paths\IEXPLORE.EXE』&改行&『iexplore.exe』)。
!AppPathChrome=(『Google Chrome』&改行&『HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\App Paths\chrome.exe』&改行&『chrome.exe』)。
!AppPathFirefox=(『Firefox』&改行&『HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\App Paths\firefox.exe』&改行&『firefox.exe』)。
!AppPathOpera=(『Opera』&改行&『HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\App Paths\opera.exe』&改行&『launcher.exe』)。

//ファイルのパス
設定ファイルパス=((母艦パス)&『f10ggr_config.ini』)。
スタートアップリンクパス=((スタートアップ)&『\f10_ggr.lnk』)。

// エラー回避
もし、コマンドライン\1が「-debug::*」にワイルドカード一致ならば、
　コマンドライン\1は空。

// エラーダイアログを表示しない
エラーダイアログ表示許可は0

//設定ファイルが存在すれば読み込む
もし、設定ファイルパスが存在ならば、
　設定ハンドル=設定ファイルパスのINI開く
　設定ハンドルで『設定』の『Shift+F10で終了』をINI読んでshift10CloseFlagに代入
　設定ハンドルで『設定』の『自動起動』をINI読んでautoStartFlagに代入
　設定ハンドルで『設定』の『URL直接開く』をINI読んでurlOpenFlagに代入
　設定ハンドルで『設定』の『HotKey_1』をINI読んでhotKeyValue1へ代入
　設定ハンドルで『設定』の『HotKey_2』をINI読んでhotKeyValue2へ代入
　設定ハンドルで『設定』の『HotKey_3』をINI読んでhotKeyValue3へ代入
　設定ハンドルで『設定』の『検索エンジン』をINI読んでsearchEngineValueへ代入
　設定ハンドルで『設定』の『ブラウザ』をINI読んでbrowserValueへ代入
　設定ハンドルのINI閉じる
違えば、初期化処理。

//ブラウザのpath、名前、exeファイル名を格納する配列
BrowserListとは配列。
BrowserNameListとは配列。
BrwoserExeListとは配列。
//配列の添字
no=0。
AppPathIEでブラウザ存在確認処理。
AppPathChromeでブラウザ存在確認処理。
AppPathFirefoxでブラウザ存在確認処理。
AppPathOperaでブラウザ存在確認処理。
もし、no=1ならば、browserValue=0。
もし、(browserValue>no)ならば、//ブラウザが2つ以上インストールされていれば、
　browserValue=0。//既定のブラウザを選択する
　
// 設定ウィンドウ　
SettingFormとはフォーム
これについて
　背景色はウィンドウ背景色。
　タイトルは(『F10貼り付けずにググる 設定』)。
　スタイルは(『ダイアログスタイル』)。
　H=400。
　W=330。

// 「Windows起動時に自動で起動する」チェックボックス
AutoStartCheckBoxとはチェック。
これについて
　親部品はSettingForm。
　X=20。
　Y=20。
　W=230。
　テキストは(『Windows起動時に自動で起動する』)。
　値はautoStartFlag。
　クリックした時は〜
　　autoStartFlag=AutoStartCheckBoxの値。
　　スタートアップ処理。

// 「Shift+F10で終了する」チェックボックス　
Shift10SettingCheckBoxとはチェック。
これについて
　親部品はSettingForm。
　X=20。
　Y=50。
　W=230。
　テキストは(『Shift+F10で終了する』)。
　値はshift10CloseFlag
　クリックした時は〜
　　shift10CloseFlag=Shift10SettingCheckBoxの値

// 「URLならブラウザで直接ページを開く」チェックボックス
UrlDirectOpenSettingCheckBoxとはチェック。
これについて。
　親部品はSettingForm。
　X=20。
　Y=80。
　W=230。
　テキストは(『URLならブラウザで直接ページを開く』)。
　値はurlOpenFlag。
　クリックした時は〜
　　urlOpenFlag=UrlDirectOpenSettingCheckBoxの値。

// 「ホットキー：」ラベル　　
HotKeyLabelとはラベル。
これについて。
　親部品はSettingForm。
　X=20。
　Y=110。
　テキストは(『ホットキー：』)。

// ホットキーを選ぶコンボボックス
SetHotKey1ComboBoxとはコンボ。
これについて。
　親部品はSettingForm。
　編集はオフ。
　アイテムは(『Ctrl+』&改行&『F2』&改行&『F3』&改行&『F4』&改行&『F6』&改行&『F8』&改行&『F9』&改行&『F10』)。
　値はhotKeyValue1。
　X=100。
　Y=110。
　W=60。
　リスト閉じた時は〜
　　hotKeyValue1=(SetHotKey1ComboBoxの値)。
　　第二キー登録処理。
　　KEY_NAME更新処理。

SetHotKey2ComboBoxとはコンボ。
これについて。
　親部品はSettingForm。
　編集はオフ。
　アイテムは(『Alt+』&改行&『Shift+』&改行&『1』&改行&『2』&改行&『3』&改行&『4』&改行&『5』&改行&『6』&改行&『7』&改行&『8』&改行&『9』&改行&『0』&改行&『A』&改行&『B』&改行&『C』&改行&『D』&改行&『E』&改行&『F』&改行&『G』&改行&『H』&改行&『I』&改行&『J』&改行&『K』&改行&『L』&改行&『M』&改行&『N』&改行&『O』&改行&『P』&改行&『Q』&改行&『R』&改行&『S』&改行&『T』&改行&『U』&改行&『V』&改行&『W』&改行&『X』&改行&『Y』&改行&『Z』&改行&『@』)。
　値はhotKeyValue2。
　X=170。
　Y=110。
　W=70。
　リスト閉じた時は〜
　　hotKeyValue2=(SetHotKey2ComboBoxの値)。
　　第三キー登録処理。
　　KEY_NAME更新処理。
　　
SetHotKey3ComboBoxとはコンボ。
これについて。
　親部品はSettingForm。
　編集はオフ。
　アイテムは(『1』&改行&『2』&改行&『3』&改行&『4』&改行&『5』&改行&『6』&改行&『7』&改行&『8』&改行&『9』&改行&『0』&改行&『A』&改行&『B』&改行&『C』&改行&『D』&改行&『E』&改行&『F』&改行&『G』&改行&『H』&改行&『I』&改行&『J』&改行&『K』&改行&『L』&改行&『M』&改行&『N』&改行&『O』&改行&『P』&改行&『Q』&改行&『R』&改行&『S』&改行&『T』&改行&『U』&改行&『V』&改行&『W』&改行&『X』&改行&『Y』&改行&『Z』&改行&『@』)。
　値はhotKeyValue3。
　X=250。
　Y=110。
　W=50。
　リスト閉じた時は〜
　　hotKeyValue3=(SetHotKey3ComboBoxの値)。
　　KEY_NAME更新処理。

// 「検索エンジン：」ラベル　　
SearchEngineLabelとはラベル。
これについて。
　親部品はSettingForm。
　X=20。
　Y=150。
　テキストは(『検索エンジン：』)。

// 検索エンジンを選ぶコンボボックス　　
SearchEngineSelectComboBoxとはコンボ。
これについて。
　親部品はSettingForm。
　編集はオフ。
　アイテムは(『Google』&改行&『Yahoo!Japan』&改行&『Bing』&改行&『goo』)。
　値はsearchEngineValue。
　X=100。
　Y=150。
　W=100。
　リスト閉じた時は〜
　　searchEngineValue=SearchEngineSelectComboBoxの値。

//「起動するブラウザ：」ラベル
BrowserSelectLabelとはラベル。
これについて。
　親部品はSettingForm。
　X=20。
　Y=190。
　テキストは(『起動するブラウザ：』)。

// ブラウザを選ぶコンボボックス
BrowserSelectComboBoxとはコンボ。
これについて。
　X=120。
　Y=190。
　アイテムは(『規定のWebブラウザ』&改行&(BrowserNameList))。
　値はbrowserValue。
　親部品はSettingForm。
　編集はオフ。
　リスト閉じた時は〜
　　browserValue=BrowserSelectComboBoxの値。

// バージョン情報を表示するラベル
VersionInfoLabelとはラベル。
これについて。
　親部品はSettingForm。
　X=20。
　Y=230。
　W=100。
　テキストは『F10貼り付けずにググる  Version 』 & Version。

// リンクラベルもどき
CopyrightLinkLabelとはラベル。
これについて。
　親部品はSettingForm。
　X=20。
　Y=260。
　W=100。
　文字書体は「||下線」。
　文字色は$66cc。
　テキストは『 Copyright (C) 2015 としつーる 』。
　マウス移動した時は〜
　　(0の32649のカーソルアイコン取得)にマウスカーソル設定。
　マウス押した時は〜
　　(0の32649のカーソルアイコン取得)にマウスカーソル設定。
　クリックした時は〜
　　WebSiteUrlを起動。

// 「設定ウィンドウを閉じる」ボタン
ConfigEndButtonとはボタン
これについて
　親部品はSettingForm
　X=130
　Y=300
　H=50
　W=170
　テキストは『設定ウィンドウを閉じる』
　クリックした時は〜
　　SettingFormを閉じる

// タスクトレイをクリックした時の処理
母艦のタスクトレイクリックした時は〜
　SettingFormを表示。
　SettingFormを中央移動。

// タスクトレイ右クリック時にメニューを表示するおまじない　
「,M親,ダミー
M親,M子1,開く(&O),,,母艦のタスクトレイクリックした時
M親,M線11,-
M親,M子11,最新版の確認(&U),,,最新版確認処理
M親,M線1,-
M親,M子2,終了(&C),,,終了処理」をメニュー一括作成。


GetMenu(母艦ハンドル)。
メニューハンドル=GetSubMenu(それ,0)。
M親の可視はオフ。

母艦のタスクトレイ右クリックした時は〜
　Sとは文字列。
　Sに8を確保。
　SetForegroundWindow(母艦ハンドル)。
　GetCursorPos(S)。
　UNPACK(S,POINT,POINT_TYPE)。
　TrackPopupMenu(メニューハンドル,2,POINT.X,POINT.Y,0,母艦ハンドル,0)。

// 読み込んだ設定ファイルに従ってホットキーを更新する
KEY_NAME更新処理。

ExithotKeyValueに『HTKEY終了処理』をホットキー登録。
第二キー登録処理。
第三キー登録処理。

// プログラムで一番最初に実行される関数
// メインウィンドウを非表示にするのはちらつきを抑えるため
●母艦設計
　母艦の可視はオフ。
　母艦のタイトルは『F10貼り付けずにググる』。
　母艦をタスクトレイ入れる。
　文字書体は『Meiryo UI|10』。

// 初回起動時に実行する処理
●初期化処理
　// 初回起動時にデフォルトで代入する値
　hotKeyValue1=7。 // ググる際のホットキー(1番目)
　hotKeyValue2=0。 // ホットキー(2番目)
　hotKeyValue3=0。 // ホットキー(3番目)
　searchEngineValue=0。 //使う検索エンジン(0:Google 1:Yahoo 2:Bing 3:goo)
　urlOpenFlag=1。 //URLなら直接ブラウザで開くか(0:オフ 1:オン)
　shift10CloseFlag=1。 //ShiftF10で終了するかどうか(0:オフ 1:オン)
　autoStartFlag=0。 //スタートアップに登録するか(0:オフ 1:オン)
　browserValue=0。
　
　// 初回起動時に表示するウェルカムダイアログ
　母艦のタイトル&『を起動していただきありがとうございます。

設定画面を開くにはタスクバーの虫眼鏡アイコンをクリックしてください』という。
　設定保存処理。

// ブラウザがインストールされているかレジストリを見てチェックする関数
●ブラウザ存在確認処理(regKeyで)
　もし、(regKey\1がレジストリキー存在)が1ならば、
　　regKey\0をBrowserNameList\noへ代入。
　　regKey\2をBrwoserExeList\noへ代入。
　　regKey\1のレジストリ開いてregKeyHandleに代入。// レジストリの読み込みを行うためのハンドル
　　regKeyHandleで『Path』をレジストリ読んで『"』を『』に置換して『;』を『』に置換してBrowserList\noへ代入。
　　regKeyHandleのレジストリ閉じる。
　　no=no+1。
　違えば、抜ける。

// ホットキーの再登録を行う処理
// イメージとしてはhotKeyValue = hotKeyValue1 + hotKeyValue2 + hotKeyValue3
// 例) Ctrl + Alt + A なら、1がCtrl、2がAlt、3がA
// ホットキーは最低1つ、最大3つのキーの組み合わせで設定できる
●KEY_NAME更新処理
　hotKeyValueをホットキー解除。//昔のホットキーを解除する
　もし、hotKeyValue1!=0ならば、hotKeyValue=(SetHotKey1ComboBoxのテキスト)。
　違えば、
　　もし、(hotKeyValue2<=1)AND(hotKeyValue1=0)ならば、
　　　hotKeyValue=((SetHotKey1ComboBoxのテキスト)&(SetHotKey2ComboBoxのテキスト)&(SetHotKey3ComboBoxのテキスト))。
　　違えば、
　　　hotKeyValue=((SetHotKey1ComboBoxのテキスト)&(SetHotKey2ComboBoxのテキスト))。
　(hotKeyValue)に『検索処理』をホットキー登録。//新しいホットキーを登録する

// Webブラウザを選択した際に実行する処理
●検索処理
　もし、browserValue=0ならば、旧検索処理。// 既定のWebブラウザならば
　違えば、
　　// 「URLなら直接ブラウザでページを開く」のチェックが入っていてかつ、
　　// クリップボードのテキストがURLならば直接ブラウザでWebサイトを開く
　　もし、(urlOpenFlag=1)AND(クリップボードが「*://*.*」に一致)ならば、(『"』&BrowserList\(browserValue-1)&『\』&BrwoserExeList\(browserValue-1)&『" 』&(クリップボード))を起動。
　　違えば、searchEngineValueで条件分岐。
　　　// ブラウザのPathを読み込み、指定された検索エンジンで検索する。
　　　// 0 Google | 1 Yahoo Japan | 2 Bing | 3 goo 
　　　『0』ならば、(『"』&BrowserList\(browserValue-1)&『\』&BrwoserExeList\(browserValue-1)&『" http://www.google.co.jp/search?hl=ja&q=』&(クリップボードをUTF8N変換してURLエンコード))を起動。
　　　『1』ならば、(『"』&BrowserList\(browserValue-1)&『\』&BrwoserExeList\(browserValue-1)&『" http://search.yahoo.co.jp/search?p=』&(クリップボードをUTF8N変換してURLエンコード))を起動。
　　　『2』ならば、(『"』&BrowserList\(browserValue-1)&『\』&BrwoserExeList\(browserValue-1)&『" http://www.bing.com/search?q=』&(クリップボードをUTF8N変換してURLエンコード))を起動。
　　　『3』ならば、(『"』&BrowserList\(browserValue-1)&『\』&BrwoserExeList\(browserValue-1)&『" http://search.goo.ne.jp/web.jsp?MT=&』&(クリップボードをUTF8N変換してURLエンコード)&『&mode=0&IE=UTF-8』)を起動。

// 既定のWebブラウザを選択した際に実行する処理
// 検索処理と同じ
●旧検索処理
　もし、(urlOpenFlag=1)AND(クリップボードが「*://*.*」に一致)ならば、クリップボードを起動。
　違えば、
　　searchEngineValueで条件分岐。
　　　『0』ならば、クリップボードをググる。
　　　『1』ならば、(『http://search.yahoo.co.jp/search?p=』&(クリップボードをUTF8N変換してURLエンコード))を起動。
　　　『2』ならば、(『http://www.bing.com/search?q=』&(クリップボードをUTF8N変換してURLエンコード))を起動。
　　　『3』ならば、(『http://search.goo.ne.jp/web.jsp?MT=』&(クリップボードをUTF8N変換してURLエンコード)&『&mode=0&IE=UTF-8』)を起動。


// 設定をiniファイルの書き込む処理　　　　　
●設定保存処理
　設定ハンドル=設定ファイルパスのINI開く
　設定ハンドルで『設定』の『Shift+F10で終了』にshift10CloseFlagをINI書く
　設定ハンドルで『設定』の『自動起動』にautoStartFlagをINI書く
　設定ハンドルで『設定』の『URL直接開く』にurlOpenFlagをINI書く
　設定ハンドルで『設定』の『HotKey_1』にhotKeyValue1をINI書く
　設定ハンドルで『設定』の『HotKey_2』にhotKeyValue2をINI書く
　設定ハンドルで『設定』の『HotKey_3』にhotKeyValue3をINI書く
　設定ハンドルで『設定』の『検索エンジン』にsearchEngineValueをINI書く
　設定ハンドルで『設定』の『ブラウザ』にbrowserValueをINI書く
　設定ハンドルのINI閉じる

// プログラムの終了時の処理。
// 設定の書き込み等。
●終了処理
　設定保存処理。
　ReleaseMutex(ミューテックス)。
　CloseHandle(ミューテックス)。
　終了。

// ホットキーの2番目の組み合わせを設定できるようにする。
// 例)Ctrl+Alt+2 のAltの部分
●第二キー登録処理
　もし、hotKeyValue1=0ならば、
　　SetHotKey2ComboBoxの有効はオン。
　　もし、hotKeyValue2<=1ならば、SetHotKey3ComboBoxの有効はオン。
　違えば、
　　SetHotKey2ComboBoxの有効はオフ。
　　SetHotKey3ComboBoxの有効はオフ。

// ホットキーの3番目の組み合わせを設定できるようにする。
// 例)Ctrl+Alt+2 の2の部分
●第三キー登録処理
　もし、(hotKeyValue2<=1)AND(hotKeyValue1=0)ならば、
　　SetHotKey3ComboBoxの有効はオン。
　違えば、
　　SetHotKey3ComboBoxの有効はオフ。
　　
//「Shift+F10で終了」にチェックが入っているとき
// ShiftキーとF10キーを同時に押したらプログラムを終了する処理
●HTKEY終了処理
　もし、shift10CloseFlag=1ならば、終了処理。

// スタートアップフォルダにプログラムのショートカットを作成/削除する。
//「Windows起動時に自動で起動する」にチェックが入っている時で、
// ショートカットリンクが存在しない場合は新規にショートカットリンクを作成する
// チェックが入っておらず、ショートカットリンクが存在するならショートカットリンクを削除する
●スタートアップ処理
　もし、autoStartFlag=1ならば、
　　もし、スタートアップリンクパスが存在でなければ、
　　　コマンドライン\0をスタートアップリンクパスへショートカット作成。
　　　/*「スタートアップに登録しました」という */
　違えば、
　　もし、スタートアップリンクパスが存在ならば、
　　　スタートアップリンクパスをファイル完全削除。
　　　/*「スタートアップから登録解除しました」という */

// すでにソフトウェアが起動していたら終了する
●多重起動検知処理
　『既に起動しています』という。
　終わり。

// 最新版の有無を確認する
●最新版確認処理
　エラー監視
　　経過ダイアログはオフ。
　　NewVersionData=『http://7ka.org/file/f10ggr/version.txt』からHTTPデータ取得。
　　もし、(Version < NewVersionData\0)ならば、// 最新版があればダイアログを表示
　　　MessageBox((母艦の、ハンドル),「F10貼り付けずにググる の最新版が公開されています。
ダウンロードページを開きますか？」,「F10貼り付けずにググる」,$44)。//メッセージボックス
　　　もし、それが6ならば、WebSiteUrlを起動。//「はい」をくりっくしたら配布元サイトへ移動
　　違えば、//最新版がなければ
　　　　MessageBox((母艦の、ハンドル),「最新版はありません」,「F10貼り付けずにググる」,$40)。
　エラーならば、//エラーが発生した場合
　　　MessageBox((母艦の、ハンドル),「最新版はありません」,「F10貼り付けずにググる」,$40)。



// 以下おまじない
// マウスカーソルの形を変えたりダイアログを表示するために使う

//マウスカーソルの変更
●カーソルアイコン取得(ファイルの種類の) = DLL("user32.dll","DWORD LoadCursorA(BOOL,DWORD)")
●マウスカーソル設定(Iに) = DLL("user32.dll","DWORD SetCursor(DWORD)")

//多重起動の禁止
●CreateMutex(sec,owner,{参照渡し}neme) =DLL("kernel32.dll",
　"HANDLE CreateMutexA(
LONG pSAttr,//0固定
BOOL fOwner,//所有者
LPCTSTR sMutexName//オブジェクト名
)")
●ReleaseMutex(hMutex) =DLL("kernel32.dll",
　"BOOL ReleaseMutex(
HANDLE hMutex // ミューテックスのハンドル
)")
●CloseHandle(hObject)=DLL("kernel32.dll",
　"BOOL CloseHandle(
HANDLE hObject // オブジェクトのハンドル
)")
●GetLastError()=DLL("kernel32.dll","DWORD GetLastError()")
　ミューテックスはCreateMutex(0,0,ミューキーワード)
　GetLastError()
　もしそれが/*ERROR_ALREADY_EXISTS*/183ならば、多重起動検知処理。

// タスクトレイ右クリックメニュー
■POINT
　・X
　・Y

!POINT_TYPEとは文字列="DWORD,DWORD"

●GetCursorPos({参照渡し}p)=DLL("USER32.DLL",
"INT GetCursorPos(
char* pPoint)")

●GetMenu(hWnd)=DLL("USER32.DLL",
"DWORD GetMenu(DWORD hWnd)")

●GetSubMenu(hMenu,I)=DLL("USER32.DLL",
"DWORD GetSubMenu(
DWORD hWnd,
DWORD Index)")

●TrackPopupMenu(hMenu,f,x,y,r,hWnd,p)=DLL("USER32.DLL",
"Int TrackPopupMenu(
Int hMenu,
Int wFlags,
Int x,
Int y,
Int nReserved,
Int hWnd,
Int lPrc)")

●SetForegroundWindow(hWnd) =DLL("user32.dll",
"BOOL SetForegroundWindow(
HWND hWnd
)")

// メッセージボックス
●MessageBox(h,t,c,u) =DLL("user32.dll", "int MessageBoxA(
        HWND hWnd, // handle of owner window
        LPCTSTR lpText, // address of text in message box
        LPCTSTR lpCaption, // address of title of message box  
        UINT uType  // style of message box
    )")#"
    
// プログラムここまで
